# Generated by Django 3.1.1 on 2020-10-03 20:46

import autoslug.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auctions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.RemoveField(
            model_name='auction',
            name='bill_for_unsold_lots',
        ),
        migrations.AddField(
            model_name='auction',
            name='alternate_pickup_location',
            field=models.CharField(blank=True, help_text='Description of alternate pickup location', max_length=300, null=True),
        ),
        migrations.AddField(
            model_name='auction',
            name='alternate_pickup_location_map',
            field=models.CharField(blank=True, help_text='Google Maps link to alternate pickup location', max_length=2000, null=True),
        ),
        migrations.AddField(
            model_name='auction',
            name='alternate_pickup_time',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='auction',
            name='area',
            field=models.CharField(default='vt', help_text='State or region of this auction', max_length=300),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='auction',
            name='code_to_add_lots',
            field=models.CharField(blank=True, help_text='This is like a password: People in your club will enter this code to put their lots in this auction', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='auction',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='auction',
            name='notes',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='auction',
            name='pickup_location',
            field=models.CharField(default='vt', help_text='Description of pickup location', max_length=300),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='auction',
            name='pickup_location_map',
            field=models.CharField(default='vt', help_text='Find the location on Google maps, click Menu>Share or Embed Map and paste the embed link here', max_length=2000),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='auction',
            name='pickup_time',
            field=models.DateTimeField(default='2020-09-10 18:02:40.508996'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='auction',
            name='slug',
            field=autoslug.fields.AutoSlugField(default='default', editable=False, populate_from='title', unique=True),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='auction',
            name='unsold_lot_fee',
            field=models.PositiveIntegerField(default=0, help_text="The amount, in dollars, that the seller will be charged if their lot doesn't sell", validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)]),
        ),
        migrations.AddField(
            model_name='lot',
            name='donation',
            field=models.BooleanField(default=False, help_text='All proceeds from this lot should go to the auction'),
        ),
        migrations.AlterField(
            model_name='auction',
            name='lot_entry_fee',
            field=models.PositiveIntegerField(default=0, help_text='The amount, in dollars, that the seller will be charged if a lot sells', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)]),
        ),
        migrations.AlterField(
            model_name='lot',
            name='auction',
            field=models.ForeignKey(blank=True, help_text="Select an auction to put this lot into.  This lot must be brought to the auction's pickup location", null=True, on_delete=django.db.models.deletion.SET_NULL, to='auctions.auction'),
        ),
        migrations.AlterField(
            model_name='lot',
            name='date_end',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='lot',
            name='i_bred_this_fish',
            field=models.BooleanField(default=False, help_text='Check to get breeder points for this lot'),
        ),
        migrations.AlterField(
            model_name='lot',
            name='quantity',
            field=models.PositiveIntegerField(default=1, help_text='How many of this item are in this lot?', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='lot',
            name='reserve_price',
            field=models.PositiveIntegerField(default=2, help_text='The item will not be sold unless someone bids at least this much', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(200)]),
        ),
        migrations.AlterUniqueTogether(
            name='lot',
            unique_together={('user', 'active', 'lot_name', 'description')},
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20)),
                ('club', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='auctions.club')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='auctions.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('common_name', models.CharField(help_text='The name usually used to describe this species', max_length=255)),
                ('scientific_name', models.CharField(blank=True, help_text='Latin name used to describe this species', max_length=255)),
                ('breeder_points', models.BooleanField(default=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='auctions.category')),
            ],
            options={
                'verbose_name_plural': 'Products and species',
            },
        ),
        migrations.RemoveField(
            model_name='lot',
            name='category',
        ),
        migrations.AddField(
            model_name='lot',
            name='species',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auctions.product'),
        ),
        migrations.AddField(
            model_name='lot',
            name='species_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auctions.category'),
        ),
    ]
