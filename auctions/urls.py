from django.conf import settings
from django.urls import include, path
from django.contrib import admin
from . import views
from django.contrib.auth.decorators import login_required

urlpatterns = [
    path('api/payinvoice/<int:pk>/', login_required(views.invoicePaid)),
    path('api/watchitem/<int:pk>/', login_required(views.watchOrUnwatch)),
    path('api/species/', login_required(views.getSpecies)),
    path('api/lots/ban/<int:pk>/', views.lotBan),
    path('api/image/rotate/', views.imageRotate),
    path('api/lots/get_recommended/', views.RecommendedLots.as_view()),
    path('api/pageview/<int:pk>/', views.pageview),
    path('api/pageview/<int:pk>/new/', views.pageview),
    path('api/feedback/<int:pk>/<str:leave_as>/', views.feedback),
    path('api/users/ban/<int:pk>/', views.userBan),
    path('api/users/unban/<int:pk>/', views.userUnban),
    path('api/users/location/', views.setCoordinates),
    path('api/users/lot_notifications/', views.lotNotifications),
    path('api/chart/lots/<int:pk>/', views.LotChartView.as_view()),
    path('api/chart/users/<int:pk>/', views.UserChartView.as_view()),
    path('api/chart/auction/', views.AuctionChartView.as_view()),
    path('api/userignorecategory/create/<int:pk>/', views.CreateUserIgnoreCategory.as_view()),
    path('api/userignorecategory/delete/<int:pk>/', views.DeleteUserIgnoreCategory.as_view()),
    path('api/userignorecategory/', views.GetUserIgnoreCategory.as_view()),
    path('leaderboard/', views.Leaderboard.as_view()),
    path('lots/recommended/', views.AllRecommendedLots.as_view()),
    path('lots/', views.AllLots.as_view(), name='allLots'),
    path('lots/<int:pk>/', views.ViewLot.as_view()),
    path('lots/edit/<int:pk>/', login_required(views.LotUpdate.as_view())),
    path('lots/delete/<int:pk>/', views.LotDelete.as_view()),
    path('lots/new/', login_required(views.LotCreateView.as_view())),
    path('lots/watched/', login_required(views.MyWatched.as_view())),
    path('lots/won/', login_required(views.MyWonLots.as_view())),
    #path('lots/my/', login_required(views.MyLots.as_view())),
    path('lots/all/', views.AllLots.as_view(), name='allLots'),
    path('lots/user/', views.LotsByUser.as_view()),
    path('lots/<int:pk>/<slug:slug>/', views.ViewLot.as_view()),
    path('bids/', login_required(views.MyBids.as_view())),
    path('', views.toDefaultLandingPage),
    path('old_about/', views.aboutSite, name='about'),
    path('about/', views.promoSite, name='promo'),
    path('account/', views.toAccount),
    path('invoices/', login_required(views.Invoices.as_view())),
    path('invoices/<int:pk>/', login_required(views.InvoiceView.as_view())),
    path('invoices/example/', views.InvoiceView.as_view()),
    path('auctions/', views.allAuctions.as_view(), name='auctions'),
    path('auctions/all/', views.allAuctions.as_view(), name='auctions'),
    path('auctions/new/', views.createAuction, name='createAuction'),
    path('auctions/<slug:slug>/edit/', views.AuctionUpdate.as_view()),
    path('auctions/<slug:slug>/invoices/', views.AuctionInvoices.as_view()),
    path('auctions/<slug:slug>/stats/', views.AuctionStats.as_view()),
    path('auctions/<slug:slug>/report/', views.auctionReport),
    path('auctions/<slug:slug>/paypal/<int:chunk>/', views.auctionInvoicesPaypalCSV),
    path('auctions/<slug:slug>/', views.AuctionInfo.as_view()),
    path('users/<int:pk>/', login_required(views.UserView.as_view())),
    path('users/<int:pk>/location/', views.UserLocationUpdate.as_view()),
    path('users/<int:pk>/username/', views.UsernameUpdate.as_view()),
    path('users/<int:pk>/preferences/', views.UserPreferencesUpdate.as_view()),
    path('ignore/', login_required(views.IgnoreCategoriesView.as_view())),
    path('locations/', views.PickupLocations.as_view(), name='PickupLocation'),
    path('locations/new/', views.PickupLocationsCreate.as_view()),
    path('locations/edit/<int:pk>/', views.PickupLocationsUpdate.as_view()),
    path('blog/<slug:slug>/', views.BlogPostView.as_view()),
    path('feedback/', views.LeaveFeedbackView.as_view()),
    path('unsubscribe/<slug:slug>/', views.UnsubscribeView.as_view()),
]